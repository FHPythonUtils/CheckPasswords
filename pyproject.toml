[tool.poetry]
name = "checkpasswords"
version = "2023"
license = "GPL-3.0-or-later"
description = "CheckPasswords uses pass_import to read a password manager source file to check for duplicate passwords; check for weak passwords; identify http sites; list available 2fa options; list emails"
authors = ["FredHappyface"]
classifiers = [
	"Environment :: Console",
	"Environment :: MacOS X",
	"Environment :: Win32 (MS Windows)",
	"Development Status :: 5 - Production/Stable",
	"Intended Audience :: Developers",
	"Intended Audience :: Education",
	"Natural Language :: English",
	"Operating System :: OS Independent",
	"Programming Language :: Python :: Implementation :: CPython",
	"Topic :: Security",
	"Topic :: Software Development :: Libraries :: Python Modules",
	"Topic :: Utilities"
]
homepage = "https://github.com/FHPythonUtils/CheckPasswords"
repository = "https://github.com/FHPythonUtils/CheckPasswords"
documentation = "https://github.com/FHPythonUtils/CheckPasswords/blob/master/README.md"
readme = "README.md"

[tool.poetry.scripts]
CheckPasswords = 'checkpasswords:cli'

[tool.poetry.dependencies]
python = "^3.8"
rich = "<14,>=13.7.0"
zxcvbn-python = "<5,>=4.4.24"
pass-import = "<4,>=3.4"

[tool.poetry.group.dev.dependencies]
gitpython = "^3.1.31"
tox = "^4.11.4"
pytest = "^7.4.4"
handsdown = "^2.1.0"
coverage = "^7.4.0"
ruff = "^0.1.13"
blackt = "^2024"
pyright = "^1.1.347"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101",  # type annotation for self in method
    "COM812",  # enforce trailing comma
	"D2",  # pydocstyle formatting
    "N",  # pep8 naming
    "PLR09",  # pylint refactor too many
    "TCH",  # type check blocks
    "W191"  # ignore this to allow tabs
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"**/{tests,docs,tools}/*" = ["D", "S101", "E402"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
env_list =
	py311
	py310
	py39
	py38

[testenv]
allowlist_externals = poetry
commands =
  poetry install -v
  poetry run pytest
"""
